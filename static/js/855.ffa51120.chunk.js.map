{"version":3,"file":"static/js/855.ffa51120.chunk.js","mappings":"2HAkBA,IAhBuB,SAAC,GAA6B,IAA3BA,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,IAKxC,YAJYC,IAARD,IACFA,EAAMD,IAIF,iBAAKG,UAAW,oBAAhB,WACI,gBAAKC,IAAKL,EAAOI,UAAS,qFACZD,IAAZF,EAAwB,mBAAqB,IAAMC,IAAKA,KAC1D,gBAAKE,UAAU,oBAAf,UACI,cAAGA,UAAW,8CAAd,SAA8DH,W,kRCoB9E,EAxBsB,WACpB,OACM,iCACA,qDAEA,gQAE4B,cAAGK,KAAK,0BAAR,qBAF5B,sOAMA,iBAAKF,UAAU,sCAAf,WACI,SAACG,EAAA,EAAD,CAAgBP,MAAOQ,EAAWP,QAAQ,qBAC1C,SAACM,EAAA,EAAD,CAAgBP,MAAOS,EAAeR,QAAQ,4BAElD,SAACM,EAAA,EAAD,CAAgBP,MAAOU,EAAWT,QAAQ,2CAC1C,6IACA,wCAAc,cAAGK,KAAK,sDAAR,uCAAd,kK","sources":["components/CaptionedImage/CaptionedImage.js","pages/projects/visualTesting.js"],"sourcesContent":["import React from 'react'\n\nconst CaptionedImage = ({ image, caption, alt }) => {\n  if (alt === undefined) {\n    alt = caption\n  }\n\n  return (\n        <div className={'flex flex-col m-2'}>\n            <img src={image} className={`max-w-80 max-h-80 border-amber-500 rounded-md border-b-2\n            ${caption !== undefined ? ' rounded-bl-none' : ''}`} alt={alt}></img>\n            <div className=\"flex rounded-b-lg\">\n                <p className={'mt-0 px-1 text-sm bg-amber-500 rounded-b-sm'}>{caption}</p>\n            </div>\n        </div>\n  )\n}\n\nexport default CaptionedImage\n","import React from 'react'\nimport '../Pages.css'\nimport CaptionedImage from '../../components/CaptionedImage/CaptionedImage'\n\nimport cubeImage from '../../images/test-base.png'\nimport cylinderImage from '../../images/test-actual.png'\nimport diffImage from '../../images/test-diff.png'\n\nconst VisualTesting = () => {\n  return (\n        <>\n        <h1>Visual Regression Tests</h1>\n\n        <p>While writing regression tests for a 3D modeling software, I was faced with the challenge of verifying\n            the state of the modeling canvas. The specific architecture of this web application made the canvas\n            a complete black box to <a href=\"https://www.cypress.io/\">Cypress</a>, the testing framework.\n            The usual techniques of verifying HTML elements and CSS would not work because that data did not exist.\n            To overcome this, I implemented visual testing to identify regressions with pixel differences.</p>\n\n        <div className='flex flex-wrap gap-8 justify-center'>\n            <CaptionedImage image={cubeImage} caption='Cube base image'/>\n            <CaptionedImage image={cylinderImage} caption='Cylinder regression'/>\n        </div>\n        <CaptionedImage image={diffImage} caption='Pixel difference highlights the issue'/>\n        <p>Visual testing takes a screenshot of the test run and compares it to a base image to check for any discrepancies</p>\n        <p>I used the <a href=\"https://github.com/mjhea0/cypress-visual-regression\">cypress-visual-regression</a> open\n            source plugin for the core of the visual testing logic, and added custom command line arguments for testers\n            to easily interact with the library. </p>\n        </>\n  )\n}\n\nexport default VisualTesting\n"],"names":["image","caption","alt","undefined","className","src","href","CaptionedImage","cubeImage","cylinderImage","diffImage"],"sourceRoot":""}