{"version":3,"file":"static/js/338.b2defb0c.chunk.js","mappings":"2HA4BA,IA1BuB,SAAC,GAAuC,IAKvDA,EALkBC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,IAAKC,EAAe,EAAfA,eAChCC,IAARF,IACCA,EAAMD,GAIiBF,OAAXK,IAAZH,EAA4B,GACtB,QAGV,IAAII,EAAa,GAKjB,YAJiBD,IAAdD,IACCE,EAAU,iBAAaF,KAIvB,iBAAKG,MAAK,wCAAmCP,GAA7C,WACI,gBAAKQ,IAAKP,EAAOM,MAAK,4EACRF,IAAZH,EAAwB,mBAAoB,IADxB,OAC6BI,GAAcH,IAAKA,KACtE,gBAAKM,UAAU,oBAAf,UACI,cAAGF,MAAO,6DAAV,SAAyEL,W,yJCQzF,EAvBMQ,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACF,WAAYC,GAAQ,IAAD,yBACf,cAAMA,IACDC,KAAOD,EAAMC,KAClB,EAAKC,SAAWF,EAAME,SAHP,EAmBlB,OAfA,yCAED,WACIC,IAAAA,iBACH,oBACD,WACI,OACI,gBAAKL,UAAU,SAAf,UACI,gBAAMA,UAAW,yCAAjB,UACI,iBAAMA,UAAS,mBAAcM,KAAKF,UAAlC,SACKE,KAAKH,eAKzB,EApBCF,CAAoBM,EAAAA,Y,wPC2B1B,EAzBqB,WACjB,OACI,iBAAKP,UAAU,0CAAf,WACI,6CACA,uMAGA,iBAAKF,MAAM,sCAAX,WACI,SAACU,EAAA,EAAD,CAAgBhB,MAAOiB,EAAWhB,QAAS,8BAC3C,SAACe,EAAA,EAAD,CAAgBhB,MAAOkB,EAAkBjB,QAAS,mCAClD,SAACe,EAAA,EAAD,CAAgBhB,MAAOmB,EAAelB,QAAS,iCAEnD,mBACA,kUAGA,mBAEA,SAACQ,EAAA,EAAD,CAAaG,SAAS,IAAGD,KAAMS,KAE/B,wHAQRA,EAAQ,uwB","sources":["components/CaptionedImage/CaptionedImage.js","components/CodeSnippet/CodeSnippet.js","pages/projects/DPPathfinder.js"],"sourcesContent":["import React from \"react\";\n\nconst CaptionedImage = ({ image, caption, alt, maxHeight}) => {\n    if(alt === undefined){\n        alt = caption\n    }\n\n    var pb;\n    if (caption === undefined) pb = ''\n    else pb = ' pb-0'\n    \n\n    var heightSpec = ''\n    if(maxHeight !== undefined){\n        heightSpec = ` max-h-${maxHeight}`\n    }\n    \n    return (\n        <div class={`flex flex-col items-center p-2${pb}`}>\n            <img src={image} class={`max-w-md border-amber-500 rounded-md border-b-2\n            ${caption !== undefined ? ' rounded-bl-none': ''}${heightSpec}`} alt={alt}></img>\n            <div className=\"flex rounded-b-lg\">\n                <p class={\"ml-0 mt-0 mb-0 text-sm pl-1 pr-1 bg-amber-500 rounded-b-sm\"}>{caption}</p>\n            </div>\n        </div>\n    );\n};\n\nexport default CaptionedImage;","import React from \"react\";\nimport Prism from \"prismjs\";\nimport \"./prismDark.css\";\nimport \"prismjs/components/prism-python\"\nimport \"prismjs/components/prism-c\"\n\n\nclass CodeSnippet extends React.Component {\n    constructor(props) {\n        super(props);\n        this.code = props.code;\n        this.language = props.language;\n    }\n\n    componentDidMount() {\n        Prism.highlightAll();\n    }\n    render() {\n        return (\n            <div className=\"w-full\">\n                <pre  className={'rounded-md border-amber-500 border-b-2'}>\n                    <code className={`language-${this.language}`}>\n                        {this.code}\n                    </code>\n                </pre>\n            </div>\n        );\n    }\n};\n\nexport default CodeSnippet;","import React from \"react\";\nimport \"../Pages.css\";\nimport CaptionedImage from \"../../components/CaptionedImage/CaptionedImage\";\nimport CodeSnippet from \"../../components/CodeSnippet/CodeSnippet\";\nimport coloradoImage from \"../../images/coloradoPath.png\"\nimport kiliImage from \"../../images/kilimanjaroPath.png\"\nimport grandCanyonImage from \"../../images/grandCanyonPath.png\"\n\n\nconst DPPathfinder = () => {\n    return (\n        <div className=\"flex flex-col place-items-center w-full\">\n            <h1>DP Path-Finding</h1>\n            <p>This program determines the most efficient path through a given terrain. It generates a grayscale map of the given \n                elevation data with optimal paths plotted as an output.</p>\n\n            <div class='flex flex-wrap gap-8 justify-center'>\n                <CaptionedImage image={kiliImage} caption={\"Path through Kilimanjaro\"}/>\n                <CaptionedImage image={grandCanyonImage} caption={\"Path through The Grand Canyon\"}/>\n                <CaptionedImage image={coloradoImage} caption={\"Path through The Rockies\"}/>\n            </div>\n            <br></br>\n            <p>The program uses the given terrain elevation and finds the path left to right that experiences \n                the least elevation change. The program also represents the elevations as a grayscale image. The optimal path from each\n                left pixel is plotted in blue, and the most optimal path is plotted in yellow.</p>\n            <br></br>\n\n            <CodeSnippet language=\"c\"code={dpCode}/>\n            \n            <p>This simplified code snippet shows the algorithm used to  efficiently calculate the path</p> \n        </div>\n\n    );\n};\nexport default DPPathfinder\n\n\nlet dpCode ='// traverse table in reverse order\\nfor (int w = _width - 2; w > -1; w--) {\\n    for (int h = 0; h < _height; h++) {\\n        //get current elevation from previously-generated elevation table\\n        curr_pos = _elevations.at(h).at(w);\\n\\n        //  calculate total distance for each possible movement   \\n        straight_dist = abs(curr_pos - _elevations.at(h).at(w + 1)) + _dynamic_paths.at(h).at(w + 1);\\n        down_dist = abs(curr_pos - _elevations.at(h + 1).at(w + 1)) + _dynamic_paths.at(h + 1).at(w + 1);\\n        up_dist = abs(curr_pos - _elevations.at(h - 1).at(w + 1)) + _dynamic_paths.at(h - 1).at(w + 1);\\n\\n        //choose the shortest path and update the path table\\n        _dynamic_paths.at(h).at(w) = min(straight_dist, up_dist, down_dist)\\n    }\\n'"],"names":["pb","image","caption","alt","maxHeight","undefined","heightSpec","class","src","className","CodeSnippet","props","code","language","Prism","this","React","CaptionedImage","kiliImage","grandCanyonImage","coloradoImage","dpCode"],"sourceRoot":""}