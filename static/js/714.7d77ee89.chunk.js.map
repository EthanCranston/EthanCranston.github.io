{"version":3,"file":"static/js/714.7d77ee89.chunk.js","mappings":"2HA4BA,IA1BuB,SAAC,GAAuC,IAKvDA,EALkBC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,IAAKC,EAAe,EAAfA,eAChCC,IAARF,IACCA,EAAMD,GAIiBF,OAAXK,IAAZH,EAA4B,GACtB,QAGV,IAAII,EAAa,GAKjB,YAJiBD,IAAdD,IACCE,EAAU,iBAAaF,KAIvB,iBAAKG,MAAK,aAAQP,GAAlB,WACI,gBAAKQ,IAAKP,EAAOM,MAAK,4EACRF,IAAZH,EAAwB,mBAAoB,IADxB,OAC6BI,GAAcH,IAAKA,KACtE,gBAAKM,UAAU,oBAAf,UACI,cAAGF,MAAO,6DAAV,SAAyEL,W,gKCEzF,EAlBa,WACT,OACI,iCACA,uCACA,mHACO,cAAGQ,KAAK,mGAAR,0BADP,yNAIA,SAACC,EAAA,EAAD,CAAgBV,MAAOW,EAAWV,QAAQ,2CAC1C,gS","sources":["components/CaptionedImage/CaptionedImage.js","pages/projects/clue.js"],"sourcesContent":["import React from \"react\";\n\nconst CaptionedImage = ({ image, caption, alt, maxHeight}) => {\n    if(alt === undefined){\n        alt = caption\n    }\n\n    var pb;\n    if (caption === undefined) pb = ''\n    else pb = ' pb-0'\n    \n\n    var heightSpec = ''\n    if(maxHeight !== undefined){\n        heightSpec = ` max-h-${maxHeight}`\n    }\n    \n    return (\n        <div class={`p-2${pb}`}>\n            <img src={image} class={`max-w-md border-amber-500 rounded-md border-b-2\n            ${caption !== undefined ? ' rounded-bl-none': ''}${heightSpec}`} alt={alt}></img>\n            <div className=\"flex rounded-b-lg\">\n                <p class={\"ml-0 mt-0 mb-0 text-sm pl-1 pr-1 bg-amber-500 rounded-b-sm\"}>{caption}</p>\n            </div>\n        </div>\n    );\n};\n\nexport default CaptionedImage;","import React from \"react\";\nimport \"../Pages.css\";\nimport CaptionedImage from \"../../components/CaptionedImage/CaptionedImage\";\n\nimport clueBoard from \"../../images/clueBoard.jpg\"\n\nconst Clue = () => {\n    return (\n        <>\n        <h1>Clue Game</h1>\n        <p>This project was completed as part of a Software Engineering course, which focused \n            on <a href=\"https://www.geeksforgeeks.org/solid-principle-in-programming-understand-with-real-life-examples/\">\n            Solid Design</a> principles. The game allows the player to move, make accusations, and interact with the\n            five AI opponents. The program can represent any arbitrary board layout or player combination by interpreting a csv file.</p>\n        <CaptionedImage image={clueBoard} caption=\"Clue board with movement highlighting\"/>\n        <p>On the player's turn, all of his possible moves are highlighted in pink as shown above. When the player moves,\n            the piece is animated and moves across the board to its new position. The game also supports hidden passageways\n            like in the original board game.\n        </p>\n        </>\n\n    );\n};\n\nexport default Clue"],"names":["pb","image","caption","alt","maxHeight","undefined","heightSpec","class","src","className","href","CaptionedImage","clueBoard"],"sourceRoot":""}